{"version":3,"file":"Pagamentos-CsSXK2Kb.js","sources":["../../src/pages/Pagamentos.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { api } from \"@/services/api\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Pagamento } from \"@/types/Pagamento\";\n\nexport default function Pagamentos() {\n  const [pagamentos, setPagamentos] = useState<Pagamento[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const fetchPagamentos = async () => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      const response = await api.get(\"/pagamentos\");\n      setPagamentos(response.data);\n    } catch (error) {\n      console.error(\"Erro ao buscar pagamentos:\", error);\n      setError(\"Erro ao carregar pagamentos.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchPagamentos();\n  }, []);\n\n  const formatCurrency = (valor: number) =>\n    valor.toLocaleString(\"pt-BR\", { style: \"currency\", currency: \"BRL\" });\n\n  const formatDateTime = (iso: string) => {\n    const d = new Date(iso);\n    return `${d.toLocaleDateString(\"pt-BR\")} - ${d.toLocaleTimeString(\"pt-BR\", {\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n    })}`;\n  };\n\n  const metodoClass = (metodo: string) => {\n    switch (metodo.toLowerCase()) {\n      case \"pix\":\n        return \"text-green-600 font-semibold\";\n      case \"boleto\":\n        return \"text-yellow-600 font-semibold\";\n      case \"cartao\":\n        return \"text-blue-600 font-semibold\";\n      default:\n        return \"text-slate-700 dark:text-slate-300\";\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col min-h-screen p-6 bg-gray-50 dark:bg-slate-900\">\n      <h1 className=\"text-2xl font-bold mb-4 text-gray-800 dark:text-gray-100\">\n        Pagamentos\n      </h1>\n\n      {loading && (\n        <p className=\"text-gray-500 dark:text-gray-400 mb-4\">\n          Carregando pagamentos...\n        </p>\n      )}\n\n      {error && (\n        <p className=\"text-red-500 font-medium mb-4\">{error}</p>\n      )}\n\n      {!loading && pagamentos.length === 0 && !error && (\n        <p className=\"text-gray-500 dark:text-gray-400\">Nenhum pagamento encontrado.</p>\n      )}\n\n      {pagamentos.length > 0 && (\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 animate-fade-in\">\n          {pagamentos.map((pagamento) => (\n            <Card key={pagamento.id}>\n              <CardContent className=\"p-4 space-y-1\">\n                <p>\n                  <span className=\"text-sm text-slate-500\">ID:</span> {pagamento.id}\n                </p>\n                <p>\n                  <span className=\"text-sm text-slate-500\">Mensalidade:</span>{\" \"}\n                  {pagamento.mensalidadeId}\n                </p>\n                <p>\n                  <span className=\"text-sm text-slate-500\">Valor:</span>{\" \"}\n                  {formatCurrency(pagamento.valor_pago)}\n                </p>\n                <p className={metodoClass(pagamento.metodo)}>\n                  <span className=\"text-sm text-slate-500\">MÃ©todo:</span>{\" \"}\n                  {pagamento.metodo}\n                </p>\n                <p>\n                  <span className=\"text-sm text-slate-500\">Data:</span>{\" \"}\n                  {formatDateTime(pagamento.data_pagamento)}\n                </p>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      )}\n\n      <div className=\"mt-6 flex justify-center\">\n        <Button onClick={fetchPagamentos} disabled={loading}>\n          ðŸ”„ Recarregar Pagamentos\n        </Button>\n      </div>\n    </div>\n  );\n}"],"names":["Pagamentos","pagamentos","setPagamentos","useState","loading","setLoading","error","setError","fetchPagamentos","response","api","useEffect","formatCurrency","valor","formatDateTime","iso","metodoClass","metodo","jsxs","jsx","pagamento","Card","CardContent","Button"],"mappings":"2GAMA,SAAwBA,GAAa,CACnC,KAAM,CAACC,EAAYC,CAAa,EAAIC,EAAAA,SAAsB,CAAA,CAAE,EACtD,CAACC,EAASC,CAAU,EAAIF,EAAAA,SAAS,EAAK,EACtC,CAACG,EAAOC,CAAQ,EAAIJ,EAAAA,SAAwB,IAAI,EAEhDK,EAAkB,SAAY,CAClCH,EAAW,EAAI,EACfE,EAAS,IAAI,EAEb,GAAI,CACF,MAAME,EAAW,MAAMC,EAAI,IAAI,aAAa,EAC5CR,EAAcO,EAAS,IAAI,CAAA,OACpBH,EAAO,CACd,QAAQ,MAAM,6BAA8BA,CAAK,EACjDC,EAAS,8BAA8B,CAAA,QACzC,CACEF,EAAW,EAAK,CAAA,CAClB,EAGFM,EAAAA,UAAU,IAAM,CACdH,EAAA,CAAgB,EACf,EAAE,EAEL,MAAMI,EAAkBC,GACtBA,EAAM,eAAe,QAAS,CAAE,MAAO,WAAY,SAAU,KAAA,CAAO,EAEhEC,EAAkBC,GAAgB,CACtC,MAAM,EAAI,IAAI,KAAKA,CAAG,EACtB,MAAO,GAAG,EAAE,mBAAmB,OAAO,CAAC,MAAM,EAAE,mBAAmB,QAAS,CACzE,KAAM,UACN,OAAQ,SAAA,CACT,CAAC,EAAA,EAGEC,EAAeC,GAAmB,CACtC,OAAQA,EAAO,cAAY,CACzB,IAAK,MACH,MAAO,+BACT,IAAK,SACH,MAAO,gCACT,IAAK,SACH,MAAO,8BACT,QACE,MAAO,oCAAA,CACX,EAGF,OACEC,EAAAA,KAAC,MAAA,CAAI,UAAU,8DACb,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAG,UAAU,2DAA2D,SAAA,aAEzE,EAECf,GACCe,EAAAA,IAAC,IAAA,CAAE,UAAU,wCAAwC,SAAA,2BAErD,EAGDb,GACCa,EAAAA,IAAC,IAAA,CAAE,UAAU,gCAAiC,SAAAb,EAAM,EAGrD,CAACF,GAAWH,EAAW,SAAW,GAAK,CAACK,GACvCa,MAAC,IAAA,CAAE,UAAU,mCAAmC,SAAA,8BAAA,CAA4B,EAG7ElB,EAAW,OAAS,GACnBkB,MAAC,MAAA,CAAI,UAAU,uEACZ,SAAAlB,EAAW,IAAKmB,GACfD,EAAAA,IAACE,EAAA,CACC,SAAAH,OAACI,EAAA,CAAY,UAAU,gBACrB,SAAA,CAAAJ,OAAC,IAAA,CACC,SAAA,CAAAC,EAAAA,IAAC,OAAA,CAAK,UAAU,yBAAyB,SAAA,MAAG,EAAO,IAAEC,EAAU,EAAA,EACjE,SACC,IAAA,CACC,SAAA,CAAAD,EAAAA,IAAC,OAAA,CAAK,UAAU,yBAAyB,SAAA,eAAY,EAAQ,IAC5DC,EAAU,aAAA,EACb,SACC,IAAA,CACC,SAAA,CAAAD,EAAAA,IAAC,OAAA,CAAK,UAAU,yBAAyB,SAAA,SAAM,EAAQ,IACtDP,EAAeQ,EAAU,UAAU,CAAA,EACtC,SACC,IAAA,CAAE,UAAWJ,EAAYI,EAAU,MAAM,EACxC,SAAA,CAAAD,EAAAA,IAAC,OAAA,CAAK,UAAU,yBAAyB,SAAA,UAAO,EAAQ,IACvDC,EAAU,MAAA,EACb,SACC,IAAA,CACC,SAAA,CAAAD,EAAAA,IAAC,OAAA,CAAK,UAAU,yBAAyB,SAAA,QAAK,EAAQ,IACrDL,EAAeM,EAAU,cAAc,CAAA,CAAA,CAC1C,CAAA,CAAA,CACF,CAAA,EArBSA,EAAU,EAsBrB,CACD,CAAA,CACH,EAGFD,EAAAA,IAAC,MAAA,CAAI,UAAU,2BACb,SAAAA,EAAAA,IAACI,EAAA,CAAO,QAASf,EAAiB,SAAUJ,EAAS,SAAA,0BAAA,CAErD,CAAA,CACF,CAAA,EACF,CAEJ"}