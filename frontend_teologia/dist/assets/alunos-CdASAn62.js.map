{"version":3,"file":"alunos-CdASAn62.js","sources":["../../src/services/alunos.ts"],"sourcesContent":["// src/services/alunos.ts\nimport { api } from \"./api\";\nimport type { Aluno } from \"@/types/Aluno\";\n\n/* ─────────── Tipos auxiliares ─────────── */\nexport type AlunoPayload = Omit<Aluno, \"id\" | \"createdAt\" | \"updatedAt\">;\n\n/**\n * Constrói cabeçalhos adequados se o payload for FormData.\n */\nfunction buildHeaders(body: unknown) {\n  return body instanceof FormData\n    ? { \"Content-Type\": \"multipart/form-data\" }\n    : undefined;\n}\n\n/* ─────────── CRUD isolado (named exports) ─────────── */\n\nexport async function listAlunos(): Promise<Aluno[]> {\n  const { data } = await api.get<Aluno[]>(\"/alunos\");\n  return data;\n}\n\nexport async function getAluno(id: string): Promise<Aluno> {\n  const { data } = await api.get<Aluno>(`/alunos/${id}`);\n  return data;\n}\n\nexport async function createAluno(body: AlunoPayload | FormData): Promise<Aluno> {\n  const { data } = await api.post<Aluno>(\"/alunos\", body, {\n    headers: buildHeaders(body),\n  });\n  return data;\n}\n\nexport async function updateAluno(\n  id: string,\n  body: Partial<AlunoPayload> | FormData,\n): Promise<Aluno> {\n  const { data } = await api.patch<Aluno>(`/alunos/${id}`, body, {\n    headers: buildHeaders(body),\n  });\n  return data;\n}\n\nexport async function deleteAluno(id: string): Promise<void> {\n  await api.delete(`/alunos/${id}`);\n}\n\n/* ─────────── Extras opcionais ─────────── */\n\n/** Upload de foto - retorna a URL gerada pelo backend */\nexport async function uploadFoto(id: string, file: File): Promise<string> {\n  const form = new FormData();\n  form.append(\"foto\", file);\n\n  const { data } = await api.post<{ url: string }>(\n    `/alunos/${id}/foto`,\n    form,\n    { headers: buildHeaders(form) },\n  );\n  return data.url;\n}\n\n/** Busca paginada/filtrada (exemplo genérico) */\nexport async function searchAlunos(query = \"\", page = 1, limit = 10) {\n  const { data } = await api.get<{\n    items: Aluno[];\n    total: number;\n    page: number;\n    limit: number;\n  }>(\"/alunos/search\", { params: { q: query, page, limit } });\n  return data;\n}\n\n/* ─────────── Wrapper estilo “service” ─────────── */\n\nexport const AlunoService = {\n  listAlunos,\n  getAluno,\n  createAluno,\n  updateAluno,\n  deleteAluno,\n  uploadFoto,\n  searchAlunos,\n};\n"],"names":["buildHeaders","body","getAluno","id","data","api","updateAluno"],"mappings":"wCAUA,SAASA,EAAaC,EAAe,CACnC,OAAOA,aAAgB,SACnB,CAAE,eAAgB,uBAClB,MACN,CASA,eAAsBC,EAASC,EAA4B,CACzD,KAAM,CAAE,KAAAC,GAAS,MAAMC,EAAI,IAAW,WAAWF,CAAE,EAAE,EACrD,OAAOC,CACT,CASA,eAAsBE,EACpBH,EACAF,EACgB,CAChB,KAAM,CAAE,KAAAG,GAAS,MAAMC,EAAI,MAAa,WAAWF,CAAE,GAAIF,EAAM,CAC7D,QAASD,EAAaC,CAAI,CAAA,CAC3B,EACD,OAAOG,CACT"}