{"version":3,"file":"Mensalidades-C4VndffY.js","sources":["../../src/services/mensalidades.ts","../../src/pages/Mensalidades.tsx"],"sourcesContent":["// ──────────────────────────────────────────────────────────────\n// src/services/mensalidades.ts\n// Serviço REST + hooks (opcional) para Mensalidades\n// ──────────────────────────────────────────────────────────────\nimport api from \"@/services/api\";               // alias absoluto\nimport type { Mensalidade } from \"@/types/Mensalidade\";\nimport type { AxiosResponse } from \"axios\";\n\n/* ------------------------------------------------------------- */\n/*  1. Tipagens auxiliares                                       */\n/* ------------------------------------------------------------- */\ntype ServiceResult<T> = Promise<T>;\n\ninterface ListParams {\n  alunoId?: string;\n  status?: \"pago\" | \"pendente\";\n  page?: number;\n  perPage?: number;\n}\n\n/* ------------------------------------------------------------- */\n/*  2. Chamadas REST puras                                       */\n/* ------------------------------------------------------------- */\nasync function getMensalidades(\n  params?: ListParams,\n): ServiceResult<Mensalidade[]> {\n  const { data } = await api.get<Mensalidade[]>(\"/mensalidades\", { params });\n  return data;\n}\n\nasync function getMensalidade(id: string): ServiceResult<Mensalidade> {\n  const { data } = await api.get<Mensalidade>(`/mensalidades/${id}`);\n  return data;\n}\n\nasync function createMensalidade(\n  payload: Partial<Mensalidade>,\n): ServiceResult<Mensalidade> {\n  const { data } = await api.post<Mensalidade>(\"/mensalidades\", payload);\n  return data;\n}\n\nasync function updateMensalidade(\n  id: string,\n  payload: Partial<Mensalidade>,\n): ServiceResult<Mensalidade> {\n  const { data } = await api.put<Mensalidade>(`/mensalidades/${id}`, payload);\n  return data;\n}\n\nasync function deleteMensalidade(id: string): ServiceResult<void> {\n  await api.delete(`/mensalidades/${id}`);\n}\n\n/* ------------------------------------------------------------- */\n/*  3. Export principal                                          */\n/* ------------------------------------------------------------- */\nexport const mensalidadeService = {\n  getMensalidades,\n  getMensalidade,\n  createMensalidade,\n  updateMensalidade,\n  deleteMensalidade,\n};\n\nexport default mensalidadeService; // permite `import mensalidadeService from ...`\n\n/* ############################################################# */\n/*  4. Hooks prontos (React-Query) – use se quiser               */\n/* ############################################################# */\n//\n// Para usar, instale:\n//\n//   pnpm add @tanstack/react-query\n//\n// e envolva o App com <QueryClientProvider>.  Caso não use,\n// basta remover o bloco abaixo.\n//\nimport {\n  useQuery,\n  useMutation,\n  useQueryClient,\n} from \"@tanstack/react-query\";\n\nexport const useMensalidades = (params?: ListParams) =>\n  useQuery({\n    queryKey: [\"mensalidades\", params],\n    queryFn: () => getMensalidades(params),\n  });\n\nexport const useCreateMensalidade = () => {\n  const qc = useQueryClient();\n  return useMutation({\n    mutationFn: createMensalidade,\n    onSuccess: () => qc.invalidateQueries({ queryKey: [\"mensalidades\"] }),\n  });\n};\n\nexport const useUpdateMensalidade = () => {\n  const qc = useQueryClient();\n  return useMutation({\n    mutationFn: ({ id, payload }: { id: string; payload: Partial<Mensalidade> }) =>\n      updateMensalidade(id, payload),\n    onSuccess: () => qc.invalidateQueries({ queryKey: [\"mensalidades\"] }),\n  });\n};\n\nexport const useDeleteMensalidade = () => {\n  const qc = useQueryClient();\n  return useMutation({\n    mutationFn: deleteMensalidade,\n    onSuccess: () => qc.invalidateQueries({ queryKey: [\"mensalidades\"] }),\n  });\n};\n","// src/pages/Mensalidades.tsx\nimport { useCallback, useEffect, useState } from \"react\";\nimport Navbar   from \"@/components/Navbar\";\nimport Sidebar  from \"@/components/Sidebar\";\nimport { Card } from \"@/components/ui/card\";\nimport { mensalidadeService } from \"@/services/mensalidades\";   // ✅ novo import\nimport type { Mensalidade }   from \"@/types/Mensalidade\";\n\nexport default function Mensalidades() {\n  /* ──────────────── state ──────────────── */\n  const [rows, setRows]         = useState<Mensalidade[]>([]);\n  const [loading, setLoading]   = useState(true);\n  const [error, setError]       = useState<string | null>(null);\n\n  /* ──────────────── helpers ────────────── */\n  const fetchRows = useCallback(async () => {\n    try {\n      setLoading(true);\n      const data = await mensalidadeService.getMensalidades();\n      setRows(data);\n    } catch (e) {\n      console.error(e);\n      setError(\"Não foi possível carregar as mensalidades.\");\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  /** formata dinheiro no padrão BRL */\n  const brl = (v: number) =>\n    v.toLocaleString(\"pt-BR\", { style: \"currency\", currency: \"BRL\" });\n\n  /** formata ISO-Date → dd/mm/aaaa */\n  const fmtDate = (iso: string) =>\n    new Date(iso).toLocaleDateString(\"pt-BR\");\n\n  /** cor da badge de status */\n  const statusColor = (s: string) =>\n    ({\n      pago:     \"text-green-600\",\n      pendente: \"text-yellow-600\",\n      vencido:  \"text-red-600\",\n    }[s.toLowerCase() as keyof typeof rows] ?? \"text-slate-700 dark:text-slate-300\");\n\n  /* ─────────────── effect ─────────────── */\n  useEffect(() => { void fetchRows(); }, [fetchRows]);\n\n  /* ─────────────── render ─────────────── */\n  return (\n    <div className=\"flex flex-col min-h-screen bg-slate-50 dark:bg-slate-900\">\n      <Navbar />\n      <div className=\"flex flex-1\">\n        <Sidebar />\n        <main className=\"flex-1 p-6\">\n          <h2 className=\"text-2xl font-bold mb-6 text-gray-800 dark:text-gray-100\">\n            Mensalidades\n          </h2>\n\n          {/* feedbacks ------------------------------------------------- */}\n          {loading && (\n            <p className=\"text-sm text-gray-500 dark:text-gray-400 mb-4 animate-pulse\">\n              Carregando mensalidades…\n            </p>\n          )}\n          {error && <p className=\"text-red-500 font-medium mb-4\">{error}</p>}\n          {!loading && !rows.length && !error && (\n            <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n              Nenhuma mensalidade encontrada.\n            </p>\n          )}\n\n          {/* tabela ---------------------------------------------------- */}\n          {!!rows.length && (\n            <Card className=\"overflow-x-auto animate-fade-in\">\n              <table className=\"min-w-full table-auto border border-gray-300 dark:border-gray-700 text-sm\">\n                <thead className=\"bg-gray-100 dark:bg-slate-800\">\n                  <tr>\n                    <th className=\"border px-4 py-2 text-left\">Aluno</th>\n                    <th className=\"border px-4 py-2 text-left\">Valor</th>\n                    <th className=\"border px-4 py-2 text-left\">Status</th>\n                    <th className=\"border px-4 py-2 text-left\">Vencimento</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {rows.map((m) => (\n                    <tr\n                      key={m.id}\n                      className=\"hover:bg-slate-50 dark:hover:bg-slate-800 transition-colors\"\n                    >\n                      <td className=\"border px-4 py-2\">{m.aluno?.nome ?? \"—\"}</td>\n                      <td className=\"border px-4 py-2\">{brl(m.valor)}</td>\n                      <td className={`border px-4 py-2 ${statusColor(m.status)}`}>\n                        {m.status}\n                      </td>\n                      <td className=\"border px-4 py-2\">{fmtDate(m.vencimento)}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </Card>\n          )}\n        </main>\n      </div>\n    </div>\n  );\n}\n"],"names":["getMensalidades","params","data","api","getMensalidade","id","createMensalidade","payload","updateMensalidade","deleteMensalidade","mensalidadeService","Mensalidades","rows","setRows","useState","loading","setLoading","error","setError","fetchRows","useCallback","e","brl","v","fmtDate","iso","statusColor","s","useEffect","jsxs","jsx","Navbar","Sidebar","Card","m"],"mappings":"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"}