networks:
  teologia_network:
    driver: bridge

volumes:
  mariadb_data:
  prometheus_data:
  letsencrypt:
  logs_data:
  uploads_data:

services:
  mariadb:
    image: mariadb:10.6
    container_name: mariadb_teologia
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mariadb_data:/var/lib/mysql
    ports:
      - "3307:3306"
    networks:
      - teologia_network
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u${MYSQL_USER} -p${MYSQL_PASSWORD} --silent"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend_teologia
      dockerfile: Dockerfile
    container_name: backend_teologia
    restart: unless-stopped
    env_file:
      - .env.production
    environment:
      NODE_ENV: production
      GOOGLE_APPLICATION_CREDENTIALS: /app/secrets/firebase-service-account.json
    depends_on:
      mariadb:
        condition: service_healthy
    command: >
      sh -c "
        npx prisma migrate deploy &&
        node dist/src/main.js
      "
    volumes:
      - ./secrets:/app/secrets:ro
      - logs_data:/app/logs
      - uploads_data:/app/uploads
    ports:
      - "3001:3000"
    networks:
      - teologia_network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health',r=>process.exit(r.statusCode==200?0:1)).on('error',()=>process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - traefik.enable=true
      - traefik.http.routers.backend.rule=Host(`$${DOMAIN}`) && PathPrefix(`/api`)
      - traefik.http.routers.backend.entrypoints=websecure
      - traefik.http.routers.backend.tls.certresolver=myresolver
      - traefik.http.services.backend.loadbalancer.server.port=3000

  frontend:
    build:
      context: ./frontend_teologia
      dockerfile: Dockerfile
      args:
        VITE_API_URL: https://$${DOMAIN}/api
    container_name: frontend_teologia
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_started
    ports:
      - "5173:80"
    networks:
      - teologia_network
    labels:
      - traefik.enable=true
      - traefik.http.routers.frontend.rule=Host(`$${DOMAIN}`)
      - traefik.http.routers.frontend.entrypoints=websecure
      - traefik.http.routers.frontend.tls.certresolver=myresolver
      - traefik.http.services.frontend.loadbalancer.server.port=80

  traefik:
    image: traefik:v2.9
    container_name: traefik_teologia
    restart: unless-stopped
    command:
      - --api.dashboard=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.myresolver.acme.httpchallenge=true
      - --certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web
      - --certificatesresolvers.myresolver.acme.email=${EMAIL_LETSENCRYPT}
      - --certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json
    ports:
      - "8081:80"
      - "4443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - letsencrypt:/letsencrypt
    networks:
      - teologia_network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus_teologia
    restart: unless-stopped
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - teologia_network

  node_exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter_teologia
    restart: unless-stopped
    ports:
      - "9100:9100"
    networks:
      - teologia_network
