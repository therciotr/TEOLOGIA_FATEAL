version: "3.8"

networks:
  teologia_network:
    driver: bridge

volumes:
  mariadb_data:
  prometheus_data:

services:
  mariadb:
    image: mariadb:10.6
    container_name: mariadb_teologia
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mariadb_data:/var/lib/mysql
    networks:
      - teologia_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend_teologia
      dockerfile: Dockerfile
    container_name: backend_teologia
    restart: always
    env_file:
      - .env
    environment:
      NODE_ENV: production
      GOOGLE_APPLICATION_CREDENTIALS: /app/secrets/firebase-service-account.json
    command: node dist/main.js
    depends_on:
      - mariadb
    ports:
      - "3000:3000"
    volumes:
      - ./secrets/firebase-service-account.json:/app/secrets/firebase-service-account.json:ro
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    networks:
      - teologia_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`${DOMAIN}`) && PathPrefix(`/api`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls.certresolver=myresolver"
      - "traefik.http.services.backend.loadbalancer.server.port=3000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend_teologia
      dockerfile: Dockerfile
      args:
        VITE_API_URL: https://${DOMAIN}/api
    container_name: frontend_teologia
    restart: always
    depends_on:
      - backend
    ports:
      - "5173:80"
    networks:
      - teologia_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=myresolver"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"

  traefik:
    image: traefik:v2.9
    container_name: traefik_teologia
    restart: always
    command:
      - "--api.dashboard=true"
      - "--api.insecure=true"  # Apenas em desenvolvimento!
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.email=${EMAIL_LETSENCRYPT}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik/letsencrypt:/letsencrypt
    networks:
      - teologia_network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus_teologia
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - teologia_network

  node_exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter_teologia
    ports:
      - "9100:9100"
    networks:
      - teologia_network
