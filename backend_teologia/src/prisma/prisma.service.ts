import { Injectable, OnModuleInit, INestApplication } from '@nestjs/common';
import { PrismaClient } from '@prisma/client';

/**
 * âœ… PrismaService
 * ServiÃ§o que gerencia a conexÃ£o com o banco de dados usando Prisma Client.
 *
 * ðŸŸ¦ Este serviÃ§o estende o PrismaClient nativo e adiciona recursos de:
 *  - ConexÃ£o inicial ao iniciar o mÃ³dulo (onModuleInit)
 *  - Fechamento automÃ¡tico ao desligar o app (enableShutdownHooks)
 *
 * ðŸ”¹ Para usÃ¡-lo, injete em qualquer mÃ³dulo que precise acessar o banco:
 *   constructor(private readonly prisma: PrismaService) {}
 */
@Injectable()
export class PrismaService extends PrismaClient implements OnModuleInit {
  /**
   * ðŸ”¹ Executado quando o mÃ³dulo Ã© inicializado (start da aplicaÃ§Ã£o)
   * Conecta ao banco.
   */
  async onModuleInit() {
    await this.$connect();
  }

  /**
   * ðŸ”¹ Permite ao PrismaService ouvir eventos de encerramento da aplicaÃ§Ã£o
   * e fechar a conexÃ£o de forma segura.
   *
   * @param app InstÃ¢ncia da aplicaÃ§Ã£o NestJS
   */
  async enableShutdownHooks(app: INestApplication) {
    // ðŸ‘‡ Ajuste para evitar o erro TS2345: "Argument of type '"beforeExit"' is not assignable..."
    (this as any).$on('beforeExit', async () => {
      await app.close();
    });
  }
}